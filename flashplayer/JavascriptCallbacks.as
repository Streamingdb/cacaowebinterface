package {	import flash.events.*;	import flash.external.*;	import flash.utils.*;	import flash.system.*;	public class JavascriptCallbacks	{		private var _maininstance;		public function JavascriptCallbacks()		{			// constructor code			this.init();			this._maininstance = Main.getInstance();		}				public function playurl(url):void {			_maininstance.urlofvideo = url;			this._maininstance.clearSubtitles();			this._maininstance.startplaying();		}				private function setupCallbacks():void		{			try {				// Register the SWF client functions with the container 				ExternalInterface.addCallback("showMessage", _maininstance.errorMessage);				ExternalInterface.addCallback("playMedia", playurl);  												ExternalInterface.addCallback("seekMedia", _maininstance.ns.seek);				ExternalInterface.addCallback("playbackStatus", _maininstance.playbackStatus); // TODO				//ExternalInterface.addCallback("position", _maininstance.ns.time); // Bug				ExternalInterface.addCallback("duration", _maininstance.playbackDuration);								ExternalInterface.addCallback("subtitles", _maininstance.setSubtitles);								// Notify the container that the SWF is ready to be called. 				ExternalInterface.call("Cacaoweb.setSWFIsReady");			} catch (SecurityError) {				Main.log("addCallback failed");							}		}		public function init()		{			// Check if the container is able to use the external API. 			if (ExternalInterface.available)			{				// security options to be able to make cross domain calls				Security.allowDomain("*");				Security.allowInsecureDomain("*");								// set up a Timer to call the 				// container at 100ms intervals. Once the container responds that 				// it's ready, the timer will be stopped. 				var readyTimer:Timer = new Timer(100);				readyTimer.addEventListener(TimerEvent.TIMER, timerHandler);				readyTimer.start();			}			else			{				trace("External interface is not available for this container.");			}		}		private function timerHandler(event:TimerEvent):void		{			// calls the isReady javascript method of the container to 			// see if the container has finished loading and is ready			var isReady:Boolean = false;			try {				isReady = ExternalInterface.call("Cacaoweb.isReady");			} catch (SecurityError) {				Timer(event.target).stop();				isReady = false;			}			if (isReady)			{				// If the container has become ready, we don't need to check anymore, 				// so stop the timer. 				Timer(event.target).stop();				// Set up the ActionScript methods that will be available to be ;				// called by the container. 				this.setupCallbacks();			}		}	}}